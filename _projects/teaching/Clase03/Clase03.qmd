---
title: "Haciendo Ciencia Abierta"
subtitle: "Clase 3"
date: "2024-06-24"
author: 
  - Ignacio Sarmiento-Barbieri
  - Gustavo Castillo Alvarez
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: img/uniandes_logo.png
---

## 

:::: {.columns}

::: {.column width="50%"}
Corta [encuesta](https://tally.so/r/nPEQ0x) para conocer sus necesidades:
:::

::: {.column width="50%"}
![](img/survey_initial.png)
:::
::::

# Retomando clase anterior
<!-- ##################################################### -->
<!-- ###############        MOTIVACION       ############# -->
<!-- ##################################################### -->

## Reproducible vs Replicable

![](img/reproducible-definition-grid.jpg){.absolute top="150"}

## Diciendo y haciendo
![](img/april_2019_p_2.png)

:::footer
Clyburne-Sherin, et al (2019, pág. 2) *Computational Reproducibility via Containers in Psychology*
:::
## Acotando el problema

- **Reproducción computacional**

:::: {.columns}
::: {style="font-size: 70%;"}
::: {.column width="50%"}
"Kitzes (2017) describes a research project as being
'computationally reproducible' when “a second investigator
(including **you in the future**) can recreate the
final reported results of the project, including key quantitative
findings, tables, and figures, given only a set of
files and written instructions." 

(Clyburne-Sherin et al, 2019, pág. 1, énfasis añadido)
:::
:::

::: {.column width="50%"}
![](img/kitzes.jpg){.absolute top="100" right="30" width="333" height="500"}
:::

::::

<!-- ##################################################### -->
<!-- ###############        COMPUS       ############# -->
<!-- ##################################################### -->


## Computadoras, y más computadoras

¿Por qué nuestra obsesión con las computadoras?

> La escritura hizo que ambos procesos [almacenamiento y transmisión de información] fueran mucho más potentes y fiables. Permitió el almacenamiento de información en concentraciones mucho mayores y durante periodos de tiempo mucho más largos de lo que nunca se había creído posible, e hizo posible la transmisión de información a distancias mucho mayores, con más matices y fidelidad, de lo que nunca se había creído posible.
>
> Gillam (2002, pág. 4, trad. propia), [*Unicode Demystified*](https://www.oreilly.com/library/view/unicode-demystified/0201700522/)


##
- Las computadoras son la herramienta de tecnología de información de nuestros tiempos
- 

> La tecnología de la información no empezó con el ordenador, ni con el teléfono o el telégrafo. Empezó con el lenguaje escrito.
>
> Gillam (2002, pág. 4, trad. propia), [*Unicode Demystified*](https://www.oreilly.com/library/view/unicode-demystified/0201700522/)

## Computación
![](img/Hinsen_1.png)

:::footer
Tomado de [presentación de Konrad Hinsen](https://khinsen.net/keynote-acm-rep-24/) en ACM REP 2024, *Reproducibility and replicability of computer simulations*
:::

<!-- ..........................................................  -->
## Computación
![](img/hinsen_2.png)

:::footer
Tomado de [presentación de Konrad Hinsen](https://khinsen.net/keynote-acm-rep-24/) en ACM REP 2024, *Reproducibility and replicability of computer simulations*
:::
<!-- ..........................................................  -->
  
<!-- ..........................................................  -->
## Computación
![](img/hinsen_3.png)

:::footer
Tomado de [presentación de Konrad Hinsen](https://khinsen.net/keynote-acm-rep-24/) en ACM REP 2024, *Reproducibility and replicability of computer simulations*
:::
<!-- ..........................................................  -->

## Dependencias
![](img/dependency_xkcd.png)

:::footer
Tomado de [xkcd #2347](https://xkcd.com/2347/)
:::
<!-- insert XKCD dependency  -->

<!-- ..........................................................  -->

## Peso atómico del Radio

::: {style="font-size: 70%;"}
Notas de laboratorio de Pierre y Marie Curie, 22 de abril de 1902 del [peso atómico del radio](https://es.wikipedia.org/wiki/Radio_(elemento)){preview-link="true" style="text-align: center"}.
:::

![](img/curie1.jpg){.absolute top="150" left="300" width="266" height="477"}

![](img/curie1_zoom.jpeg){.absolute .fragment top="100" left="100"}


:::footer
Fuente: [Museo Curie](https://musee.curie.fr/blog/la-fiche-radioactive) (collection ACJC)
:::

## Estilo de código

> “There are only two hard things in Computer Science: cache invalidation and naming things.”
> — Phil Karlton

:::{style="font-size: 70%;"}
::: incremental
- Seguir guías de estilo de código: [tidyverse](https://style.tidyverse.org/index.html), [Google](https://google.github.io/styleguide/)
- ¿qué estilo escoger?
  - No importa, siempre y cuando *sigas un estilo* y seas *consistente*
:::
:::

. . .

```{.r code-line-numbers="1-4|6-11"}
# Bad
do_something_very_complicated("that", requires, many, arguments,
                              "some of which may be long"
                              )
# Good
do_something_very_complicated(
  something = "that",
  requires = many,
  arguments = "some of which may be long"
)
```


# Documentos Reproducibles
<!-- ##################################################### -->
<!-- ###############        REP DOCS       ############# -->
<!-- ##################################################### -->


## Pero primero, Markdown

::: {style="font-size: 87%;"}
Es un [lenguaje de marcado](https://es.wikipedia.org/wiki/Lenguaje_de_marcado) (light markup language). Ejemplo más complicado: HTML. Le da instrucciones a una computadora cómo visualizar el contenido, pero markdown es además fácil de leer.
:::
. . .
```{.md filename="ejemplo.md"}
# Título 1

## Título 2
El texto puede ser *cursiva*, **negrilla**, ~~tachado~~, o como código
`script.do`, e inclusive superíndice^2^ / subíndice~2~.
También puedo poner un enlace a [Google](https://www.google.com/) y 
hasta insertar tablas:

|Fruta | Color |
| ---| ---|
| Manzana | Roja |
| Pera | Verde |
```

Veamos un tutorial usando el editor online gratuito [StackEdit](https://stackedit.io/app#)

## README.md

Los famosos `README.md` se escriben en Markdown. Veamos un [ejemplo](https://github.com/ignaciomsarmiento/spread_detection_and_dynamics_CoVIDA).

- Acostumbrarnos a la sintáxis es crucial pues servirá para:
  - RMarkdown
  - Jupyter

## Programación Literaria

- Lo mejor de ambos mundos: código ejecutable y texto (lenguaje natural)
- En palabras de [Yihui Xie](https://yihui.org/), creador de RMarkdown:
  - "Programming + Writing = Literate Programming (LP)"
- Ejemplos:
  - [RMarkdown](https://rmarkdown.rstudio.com/)
  - [Quarto](https://quarto.org/) (esta presentación)
  - Jupyter 
  - [Pluto.jl](https://plutojl.org/)
  

## RMarkdown
> "If you discover that you have **more comments than code**, consider switching to R Markdown."
> - The tidyverse style guide

:::incremental
 - Creado en 2015 por [Yihui Xie](https://yihui.org/)
 - adfadfa
 - adfjadkfjka
:::

## Funcionamiento de R Markdown
![](img/rmarkdown_how_yihui2021.png)

:::footer
Tomado de [diapositivas](https://slides.yihui.org/2021-Brazilian-R-Day.html#26) de Xie (2021)
:::

## Quarto
- Creado el 2022 por **Posit** 
  - El mismo año la compañía RStudio PBC cambia su nombre a Posit PBC para acoger otros servicios como pyton.
- Esta presentación fue programada con Quarto, [source]().

## Jupyter
:::incremental
- Nace en 2014 por [Fernando Pérez]() (U de Antioquia, UCBoulder) y Brian Granger
- Dato: el nombre hace referencia a los 3 programas que soporta: **Ju**lia, **py**thon y **R**.
- 
- [Guía](https://gist.github.com/aaizemberg/de26054c0e2964be96bb468b9ce1c019) para usar R en Jupyter
:::

# Demostración en Vivo

## Encuesta 

::: {style="font-size: 70%;"}
::: incremental
- Para automatizar la **adquisición de información** debemos descargar los datos directamente de Zenodo, no desde nuestro computador.

```{r, echo=T}
zenodo.prefix <- "10.5072/zenodo" # Prefijo de Zenodo
zenodo.id <- "74460" # ID de la última versión
zenodo.api <- "https://sandbox.zenodo.org/api/records/" # API completo
```

- Procesamos información de la encuesta, código escondido (Clase 05)
:::
:::

```{r}
require(rjson)
basepath <- here::here()
dataloc <- file.path(basepath,"resources_for_live_lecture")
workpath <- tempdir()
download.file(paste0(zenodo.api,zenodo.id),destfile=file.path(dataloc,"metadata.json"))
```

```{r, echo=FALSE, results='hide'}
require(rio)
require(tidyr)
require(dplyr)
require(gather)
latest <- fromJSON(file=file.path(dataloc,"metadata.json"))
file.list <- as.data.frame(latest$files) %>% select(starts_with("self")) %>% gather()
f <- "https://sandbox.zenodo.org/api/records/74460/files/Antes_de_comenzar.._._dummy_Submissions_2024-06-24.csv/content"
download.file(f, destfile = file.path(workpath, "encuesta.csv"))

df <- import(file.path(workpath, "encuesta.csv"))
require(janitor)
df <- df %>% clean_names()
```

```{r}

table_src <- table(df$en_que_sistema_operativo_se_encuentra_en_este_momento)
```

## Resultados SO

- Tuvimos `r nrow(df)` respuestas.

```{r}
require(kableExtra)
kable(table_src, caption="¿En qué SO está ahora?")
```

## Resultados: Herramientas
```{r}
table_src <- table(df$con_que_herramienta_trabajas_la_mayoria_del_tiempo_para_hacer_investigacion_cuantitativa_y_o_analisis_de_datos)
pie(table_src, main = 'Herramienta preferida')
```


# Proyecto Transversal

![](img/baticomputer_meme.jpg)

# La vanguardia

## ¿Hacia dónde nos estamos moviendo?

- No solo documentos reproducibles, sino *entornos reproducibles*.